import{S as g,i as n,a as y}from"./assets/vendor-ba070a68.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))a(t);new MutationObserver(t=>{for(const s of t)if(s.type==="childList")for(const f of s.addedNodes)f.tagName==="LINK"&&f.rel==="modulepreload"&&a(f)}).observe(document,{childList:!0,subtree:!0});function r(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerPolicy&&(s.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?s.credentials="include":t.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function a(t){if(t.ep)return;t.ep=!0;const s=r(t);fetch(t.href,s)}})();const b=document.getElementById("search-form"),m=document.querySelector(".gallery"),v={rootMargin:"200px"};let i="",c=1;const d=40,E="44418416-01658c71a65aed4380a3ece44",L="https://pixabay.com/api/";let l;const u=async(o,e)=>{try{return(await y.get(L,{params:{key:E,q:o,image_type:"photo",orientation:"horizontal",safesearch:!0,page:e,per_page:d}})).data}catch(r){throw console.error("Error fetching images:",r),r}},p=o=>{const e=o.map(r=>`
        <a href="${r.largeImageURL}" class="photo-card">
            <img src="${r.webformatURL}" alt="${r.tags}" loading="lazy" />
            <div class="info">
                <p class="info-item"><b>Likes:</b> ${r.likes}</p>
                <p class="info-item"><b>Views:</b> ${r.views}</p>
                <p class="info-item"><b>Comments:</b> ${r.comments}</p>
                <p class="info-item"><b>Downloads:</b> ${r.downloads}</p>
            </div>
        </a>
    `).join("");m.insertAdjacentHTML("beforeend",e),l?l.refresh():l=new g(".gallery a",{captionDelay:250})},w=()=>{m.innerHTML=""},I=async o=>{if(o.preventDefault(),i=o.currentTarget.elements.searchQuery.value.trim(),!i){n.error({title:"Error",message:"Please enter a search query."});return}c=1,w();try{const e=await u(i,c);if(e.hits.length===0){n.error({title:"Error",message:`No images found for "${i}". Please try again.`});return}p(e.hits),n.success({title:"Success",message:`Found ${e.totalHits} images for "${i}".`}),e.hits.length===d?h():n.info({title:"Info",message:"End of images."})}catch(e){n.error({title:"Error",message:"Failed to fetch images. Please try again later."}),console.error("Error fetching images:",e)}},h=()=>{new IntersectionObserver(async(e,r)=>{if(e[0].isIntersecting){r.unobserve(e[0].target),c+=1;try{const a=await u(i,c);p(a.hits),c*d>=a.totalHits?n.info({title:"Info",message:"You've reached the end of search results."}):h()}catch(a){n.error({title:"Error",message:"Failed to fetch more images. Please try again later."}),console.error("Error fetching more images:",a)}}},v).observe(m.lastElementChild)};l=new g(".gallery a",{captionDelay:250});b.addEventListener("submit",I);
//# sourceMappingURL=commonHelpers.js.map
